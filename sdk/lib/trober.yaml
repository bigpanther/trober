openapi: 3.0.3
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/harsimranmaan/jober/0.1.5
  - description: SwaggerHub API Auto Mocking
    url: https://trober-test.herokuapp.com
info:
  version: "0.1.5"
  title: Trober API
  description: >-
    The trober API


security:
  - ApiKeyAuth: []
paths:
  /tenants:
    get:
      summary: List all tenants
      description: >-
        List all tenants


      parameters:
        - name: name
          in: query
          required: false
          description: The name of the tenant. Matches names that begin with the values
          schema:
            type: string
            minLength: 2
        - name: type
          in: query
          required: false
          description: The type of the tenant.
          schema:
            $ref: "#/components/schemas/TenantType"

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenants"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new tenant
      description: >-
        Create a new tenant


      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tenant"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/tenants/{id}":
    put:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Update an existing tenant
      description: >-
        Update an existing tenant


      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tenant"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Get tenant details
      description: >-
        Get tenant details


      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /containers:
    get:
      summary: List all Containers
      description: >-
        List all Containers


      parameters:
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
        - name: order_id
          in: query
          required: false
          description: The id of the order
          schema:
            type: string
            format: uuid
        - name: carrier_id
          in: query
          required: false
          description: The id of the carrier
          schema:
            type: string
            format: uuid
        - name: driver_id
          in: query
          required: false
          description: The id of the driver
          schema:
            type: string
            format: uuid
        - name: serial_number
          in: query
          required: false
          description: The serialNumber of the container. Matches serialNumber that begin with the values
          schema:
            type: string
            minLength: 2
        - name: type
          in: query
          required: false
          description: The type of the container.
          schema:
            $ref: "#/components/schemas/ContainerType"
        - name: status
          in: query
          required: false
          description: The status of the container.
          schema:
            $ref: "#/components/schemas/ContainerStatus"
        - name: size
          in: query
          required: false
          description: The size of the container.
          schema:
            $ref: "#/components/schemas/ContainerSize"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Containers"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new Container
      description: >-
        Create a new Container


      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Container"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Container"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/containers/{id}":
    put:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the container
          schema:
            type: string
            format: uuid
      summary: Update an existing container
      description: >-
        Update an existing container


      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Container"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Container"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the container
          schema:
            type: string
            format: uuid
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Get container details
      description: >-
        Get container details


      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Container"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/containers/{id}/updateStatus/{status}":
    patch:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the container
          schema:
            type: string
            format: uuid
        - name: status
          in: path
          required: true
          description: The status of the container
          schema:
            type: string
            format: uuid
      summary: Update the status of an existing container
      description: >-
        Update the status of an existing container


      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Container"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /terminals:
    get:
      summary: List all Terminals
      description: >-
        List all Terminals


      parameters:
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          required: false
          description: The name of the terminal. Matches names that begin with the values
          schema:
            type: string
            minLength: 2
        - name: type
          in: query
          required: false
          description: The type of the terminal.
          schema:
            $ref: "#/components/schemas/TerminalType"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Terminals"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new Terminal
      description: >-
        Create a new Terminal


      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Terminal"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Terminal"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/terminals/{id}":
    put:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the terminal
          schema:
            type: string
            format: uuid
      summary: Update an existing terminal
      description: >-
        Update an existing terminal


      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Terminal"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Terminal"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the terminal
          schema:
            type: string
            format: uuid
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Get terminal details
      description: >-
        Get terminal details


      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Terminal"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /orders:
    get:
      summary: List all Orders
      description: >-
        List all Orders


      parameters:
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
        - name: customer_id
          in: query
          required: false
          description: The id of the customer
          schema:
            type: string
            format: uuid
        - name: serial_number
          in: query
          required: false
          description: The serialNumber of the order. Matches serialNumber that begin with the values
          schema:
            type: string
            minLength: 2
        - name: status
          in: query
          required: false
          description: The status of the order.
          schema:
            $ref: "#/components/schemas/OrderStatus"

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new Order
      description: >-
        Create a new Order


      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/orders/{id}":
    put:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
            format: uuid
      summary: Update an existing order
      description: >-
        Update an existing order


      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
            format: uuid
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Get order details
      description: >-
        Get order details


      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /carriers:
    get:
      summary: List all Carriers
      description: >-
        List all Carriers


      parameters:
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          required: false
          description: The name of the carrier. Matches names that begin with the values
          schema:
            type: string
            minLength: 2
        - name: type
          in: query
          required: false
          description: The type of the carrier.
          schema:
            $ref: "#/components/schemas/CarrierType"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carriers"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new Carrier
      description: >-
        Create a new Carrier


      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Carrier"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carrier"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/carriers/{id}":
    put:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the carrier
          schema:
            type: string
            format: uuid
      summary: Update an existing carrier
      description: >-
        Update an existing carrier


      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Carrier"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carrier"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the carrier
          schema:
            type: string
            format: uuid
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Get carrier details
      description: >-
        Get carrier details


      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carrier"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /customers:
    get:
      summary: List all Customers
      description: >-
        List all Customers


      parameters:
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          required: false
          description: The name of the customer. Matches names that begin with the values
          schema:
            type: string
            minLength: 2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customers"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new Customer
      description: >-
        Create a new Customer


      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/customers/{id}":
    put:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
            format: uuid
      summary: Update an existing customer
      description: >-
        Update an existing customer


      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
            format: uuid
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Get customer details
      description: >-
        Get customer details


      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users:
    get:
      summary: List all users
      description: >-
        List all users


      parameters:
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          description: The name of the customer. Matches names that begin with the values
          schema:
            type: string
            minLength: 2
        - name: role
          in: query
          description: The role of the user
          schema:
            $ref: "#/components/schemas/UserRole"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new user
      description: >-
        Create a new user


      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/users/{id}":
    put:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user
          schema:
            type: string
            format: uuid
      summary: Update an existing user
      description: >-
        Update an existing user


      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user
          schema:
            type: string
            format: uuid
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Get user details
      description: >-
        Get user details


      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user
          schema:
            type: string
            format: uuid
      summary: Delete the user
      description: >-
        Delete the user


      responses:
        "204":
          description: No Content
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /appinfo:
    get:
      summary: Get supported App info
      description: >-
        Get supported App info


      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppInfo"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /self:
    get:
      summary: Get details of the logged in user
      description: >-
        Get details of the logged in user


      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /self/tenant:
    get:
      summary: Get tenant details of the logged in user
      description: >-
        Get tenant details of the logged in user


      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /health:
    get:
      summary: Get server health
      description: >-
        Get server health status


      security: []
      responses:
        "200":
          description: OK
components:
  schemas:
    Tenants:
      type: array
      items:
        $ref: "#/components/schemas/Tenant"
      description: A list of Tenants
    Tenant:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          minLength: 3
          maxLength: 50
        type:
          $ref: "#/components/schemas/TenantType"
      description: A Tenant in the system
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
      description: A list of Users
    AppInfo:
      type: object
      properties:
        currentVersion:
          type: string
          readOnly: true
        minVersion:
          type: string
          readOnly: true
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          format: uuid
          readOnly: true
        tenant_id:
          type: string
          format: uuid
        customer_id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 3
          maxLength: 50
        username:
          type: string
          minLength: 3
          maxLength: 50
        email:
          type: string
          minLength: 3
          maxLength: 50
        device_id:
          type: string
          minLength: 3
          maxLength: 50
        role:
          $ref: "#/components/schemas/UserRole"
      description: A user in the system
    Customers:
      type: array
      items:
        $ref: "#/components/schemas/Customer"
      description: A list of Customers for the tenants
    Customer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          format: uuid
          readOnly: true
        tenant_id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 3
          maxLength: 50
        orders:
          $ref: "#/components/schemas/Orders"
    Terminals:
      type: array
      items:
        $ref: "#/components/schemas/Terminal"
      description: A list of Terminals
    Terminal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          format: uuid
          readOnly: true
        tenant_id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 3
          maxLength: 50
        type:
          $ref: "#/components/schemas/TerminalType"
      description: A terminal that used for logistics
    Carriers:
      type: array
      items:
        $ref: "#/components/schemas/Carrier"
      description: A list of Carriers
    Carrier:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          format: uuid
          readOnly: true
        tenant_id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 3
          maxLength: 50
        eta:
          type: string
          format: date-time
          readOnly: true
        type:
          $ref: "#/components/schemas/CarrierType"
        containers:
          $ref: "#/components/schemas/Containers"
      description: A carrier that ships the containers
    Containers:
      type: array
      items:
        $ref: "#/components/schemas/Container"
      description: A list of Containers
    Container:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          format: uuid
          readOnly: true
        tenant_id:
          type: string
          format: uuid
        carrier_id:
          type: string
          format: uuid
        terminal_id:
          type: string
          format: uuid
        order_id:
          type: string
          format: uuid
        serial_number:
          type: string
          minLength: 5
          maxLength: 11
        origin:
          type: string
          minLength: 7
          maxLength: 20
        destination:
          type: string
          minLength: 7
          maxLength: 20
        lfd:
          type: string
          format: date-time
        reservation_time:
          type: string
          format: date-time
        size:
          $ref: "#/components/schemas/ContainerSize"
        type:
          $ref: "#/components/schemas/ContainerType"
        status:
          $ref: "#/components/schemas/ContainerStatus"
        driver_id:
          type: string
          format: uuid
        driver:
          $ref: "#/components/schemas/User"
        order:
          $ref: "#/components/schemas/Order"
        terminal:
          $ref: "#/components/schemas/Terminal"
        carrier:
          $ref: "#/components/schemas/Carrier"
      description: A container that is being shipped
    Orders:
      type: array
      items:
        $ref: "#/components/schemas/Order"
      description: A list of Orders
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          format: uuid
          readOnly: true
        tenant_id:
          type: string
          format: uuid
        customer_id:
          type: string
          format: uuid
        serial_number:
          type: string
          minLength: 7
          maxLength: 25
        status:
          $ref: "#/components/schemas/OrderStatus"
        customer:
          $ref: "#/components/schemas/Customer"
        containers:
          $ref: "#/components/schemas/Containers"
      description: A container that is being shipped
    TenantType:
      type: string
      enum:
        - System
        - Test
        - Production
    TerminalType:
      type: string
      enum:
        - Rail
        - Port
        - Airport
        - Warehouse
        - Yard
        - Custom
    CarrierType:
      type: string
      enum:
        - Air
        - Rail
        - Vessel
        - Road
    UserRole:
      type: string
      enum:
        - SuperAdmin
        - Admin
        - BackOffice
        - Driver
        - Customer
        - None
    ContainerStatus:
      type: string
      enum:
        - Unassigned
        - InTransit
        - Arrived
        - Assigned
        - Accepted
        - Rejected
        - Loaded
        - Unloaded
        - Abandoned
    ContainerSize:
      type: string
      enum:
        - 40ST
        - 20ST
        - 40HC
        - 40HW
        - Custom
    OrderStatus:
      type: string
      enum:
        - Open
        - Accepted
        - Cancelled
        - InProgress
        - Delivered
        - Invoiced
        - PaymentReceived
    ContainerType:
      type: string
      enum:
        - Incoming
        - OutGoing
    Error:
      type: object
      required:
        - code
        - message
        - id
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        id:
          type: string
          format: uuid
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-TOKEN
