openapi: 3.0.3
servers:
  - description: The trober test API
    url: https://trober-test.herokuapp.com
  - description: The trober production API
    url: https://trober.herokuapp.com
info:
  version: "0.1.9"
  title: Trober API
  description: >-
    The trober API

security:
  - ApiKeyAuth: []
paths:
  /tenants:
    get:
      summary: List all tenants
      description: >-
        List all tenants

      parameters:
        - name: name
          in: query
          required: false
          description: The name of the tenant. Matches names that begin with the values
          schema:
            type: string
            minLength: 2
        - name: page
          in: query
          required: false
          description: The page number
          schema:
            type: string
            format: int
        - name: type
          in: query
          required: false
          description: The type of the tenant.
          schema:
            $ref: "#/components/schemas/TenantType"

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenants"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new tenant
      description: >-
        Create a new tenant

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tenant"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/tenants/{id}":
    put:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Update an existing tenant
      description: >-
        Update an existing tenant

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tenant"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Get tenant details
      description: >-
        Get tenant details

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /shipments:
    get:
      summary: List all Shipments
      description: >-
        List all Shipments

      parameters:
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
        - name: order_id
          in: query
          required: false
          description: The id of the order
          schema:
            type: string
            format: uuid
        - name: carrier_id
          in: query
          required: false
          description: The id of the carrier
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          description: The page number
          schema:
            type: string
            format: int
        - name: driver_id
          in: query
          required: false
          description: The id of the driver
          schema:
            type: string
            format: uuid
        - name: serial_number
          in: query
          required: false
          description: The serialNumber of the shipment. Matches serialNumber that begin with the values
          schema:
            type: string
            minLength: 2
        - name: type
          in: query
          required: false
          description: The type of the shipment.
          schema:
            $ref: "#/components/schemas/ShipmentType"
        - name: status
          in: query
          required: false
          description: The status of the shipment.
          schema:
            $ref: "#/components/schemas/ShipmentStatus"
        - name: size
          in: query
          required: false
          description: The size of the shipment.
          schema:
            $ref: "#/components/schemas/ShipmentSize"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shipments"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new Shipment
      description: >-
        Create a new Shipment

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Shipment"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shipment"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/shipments/{id}":
    put:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the shipment
          schema:
            type: string
            format: uuid
      summary: Update an existing shipment
      description: >-
        Update an existing shipment

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Shipment"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shipment"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the shipment
          schema:
            type: string
            format: uuid
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Get shipment details
      description: >-
        Get shipment details

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shipment"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /terminals:
    get:
      summary: List all Terminals
      description: >-
        List all Terminals

      parameters:
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          description: The page number
          schema:
            type: string
            format: int
        - name: name
          in: query
          required: false
          description: The name of the terminal. Matches names that begin with the values
          schema:
            type: string
            minLength: 2
        - name: type
          in: query
          required: false
          description: The type of the terminal.
          schema:
            $ref: "#/components/schemas/TerminalType"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Terminals"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new Terminal
      description: >-
        Create a new Terminal

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Terminal"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Terminal"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/terminals/{id}":
    put:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the terminal
          schema:
            type: string
            format: uuid
      summary: Update an existing terminal
      description: >-
        Update an existing terminal

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Terminal"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Terminal"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the terminal
          schema:
            type: string
            format: uuid
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Get terminal details
      description: >-
        Get terminal details

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Terminal"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /orders:
    get:
      summary: List all Orders
      description: >-
        List all Orders

      parameters:
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          description: The page number
          schema:
            type: string
            format: int
        - name: customer_id
          in: query
          required: false
          description: The id of the customer
          schema:
            type: string
            format: uuid
        - name: serial_number
          in: query
          required: false
          description: The serialNumber of the order. Matches serialNumber that begin with the values
          schema:
            type: string
            minLength: 2
        - name: status
          in: query
          required: false
          description: The status of the order.
          schema:
            $ref: "#/components/schemas/OrderStatus"

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new Order
      description: >-
        Create a new Order

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/orders/{id}":
    put:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
            format: uuid
      summary: Update an existing order
      description: >-
        Update an existing order

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the order
          schema:
            type: string
            format: uuid
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Get order details
      description: >-
        Get order details

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /carriers:
    get:
      summary: List all Carriers
      description: >-
        List all Carriers

      parameters:
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          required: false
          description: The name of the carrier. Matches names that begin with the values
          schema:
            type: string
            minLength: 2
        - name: page
          in: query
          required: false
          description: The page number
          schema:
            type: string
            format: int
        - name: type
          in: query
          required: false
          description: The type of the carrier.
          schema:
            $ref: "#/components/schemas/CarrierType"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carriers"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new Carrier
      description: >-
        Create a new Carrier

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Carrier"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carrier"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/carriers/{id}":
    put:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the carrier
          schema:
            type: string
            format: uuid
      summary: Update an existing carrier
      description: >-
        Update an existing carrier

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Carrier"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carrier"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the carrier
          schema:
            type: string
            format: uuid
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Get carrier details
      description: >-
        Get carrier details

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Carrier"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /customers:
    get:
      summary: List all Customers
      description: >-
        List all Customers

      parameters:
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          required: false
          description: The name of the customer. Matches names that begin with the values
          schema:
            type: string
            minLength: 2
        - name: page
          in: query
          required: false
          description: The page number
          schema:
            type: string
            format: int
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customers"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new Customer
      description: >-
        Create a new Customer

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/customers/{id}":
    put:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
            format: uuid
      summary: Update an existing customer
      description: >-
        Update an existing customer

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the customer
          schema:
            type: string
            format: uuid
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Get customer details
      description: >-
        Get customer details

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users:
    get:
      summary: List all users
      description: >-
        List all users

      parameters:
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          required: false
          description: The page number
          schema:
            type: string
            format: int
        - name: name
          in: query
          description: The name of the customer. Matches names that begin with the values
          schema:
            type: string
            minLength: 2
        - name: role
          in: query
          description: The role of the user
          schema:
            $ref: "#/components/schemas/UserRole"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new user
      description: >-
        Create a new user

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/users/{id}":
    put:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user
          schema:
            type: string
            format: uuid
      summary: Update an existing user
      description: >-
        Update an existing user

      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user
          schema:
            type: string
            format: uuid
        - name: tenant_id
          in: query
          required: false
          description: The id of the tenant
          schema:
            type: string
            format: uuid
      summary: Get user details
      description: >-
        Get user details

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user
          schema:
            type: string
            format: uuid
      summary: Delete the user
      description: >-
        Delete the user

      responses:
        "204":
          description: No Content
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /appinfo:
    get:
      summary: Get supported App info
      description: >-
        Get supported App info

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppInfo"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /self:
    get:
      summary: Get details of the logged in user
      description: >-
        Get details of the logged in user

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /self/device-register:
    post:
      summary: Register the device for the user
      description: >-
        Register the device for the user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceId"
      responses:
        "204":
          description: No Content
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /self/device-remove:
    post:
      summary: Remove the device for the user
      description: >-
        Remove the device for the user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceId"
      responses:
        "204":
          description: No Content
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /self/tenant:
    get:
      summary: Get tenant details of the logged in user
      description: >-
        Get tenant details of the logged in user

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /health:
    get:
      summary: Get server health
      description: >-
        Get server health status

      security: []
      responses:
        "200":
          description: OK
components:
  schemas:
    Tenants:
      type: array
      items:
        $ref: "#/components/schemas/Tenant"
      description: A list of Tenants
    Tenant:
      type: object
      required:
        - id
        - name
        - code
        - type
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          nullable: false
          readOnly: true
          default: "00000000-0000-0000-0000-000000000000"
        created_at:
          type: string
          format: date-time
          nullable: false
          readOnly: true
        updated_at:
          type: string
          format: date-time
          nullable: false
          readOnly: true
        created_by:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          nullable: false
          minLength: 3
          maxLength: 50
        code:
          nullable: false
          type: string
          minLength: 6
          maxLength: 20
        type:
          $ref: "#/components/schemas/TenantType"
      description: A Tenant in the system
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
      description: A list of Users
    AppInfo:
      type: object
      required:
        - minVersion
      properties:
        minVersion:
          type: string
          readOnly: true
          nullable: false
    DeviceId:
      type: object
      properties:
        token:
          type: string
          nullable: false
      required:
        - token
    User:
      type: object
      required:
        - id
        - name
        - code
        - role
        - tenant_id
        - email
        - username
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          nullable: false
          default: '00000000-0000-0000-0000-000000000000'
        created_at:
          type: string
          format: date-time
          nullable: false
          readOnly: true
        updated_at:
          type: string
          format: date-time
          nullable: false
          readOnly: true
        created_by:
          type: string
          format: uuid
          readOnly: true
        tenant_id:
          type: string
          format: uuid
          nullable: false
        customer_id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 3
          maxLength: 50
          nullable: false
        username:
          type: string
          minLength: 3
          maxLength: 50
          nullable: false
        email:
          type: string
          minLength: 3
          maxLength: 50
          nullable: false
        role:
          nullable: false
          $ref: "#/components/schemas/UserRole"
      description: A user in the system
    Customers:
      type: array
      items:
        $ref: "#/components/schemas/Customer"
      description: A list of Customers for the tenants
    Customer:
      type: object
      required:
        - id
        - name
        - tenant_id
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          nullable: false
          default: '00000000-0000-0000-0000-000000000000'
        created_at:
          type: string
          format: date-time
          nullable: false
          readOnly: true
        updated_at:
          type: string
          format: date-time
          nullable: false
          readOnly: true
        created_by:
          type: string
          format: uuid
          readOnly: true
        tenant_id:
          type: string
          format: uuid
          nullable: false
        name:
          type: string
          minLength: 3
          maxLength: 50
          nullable: false
    Terminals:
      type: array
      items:
        $ref: "#/components/schemas/Terminal"
      description: A list of Terminals
    Terminal:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          nullable: false
        created_at:
          type: string
          format: date-time
          nullable: false
          readOnly: true
        updated_at:
          type: string
          format: date-time
          nullable: false
          readOnly: true
        created_by:
          type: string
          format: uuid
          readOnly: true
        tenant_id:
          type: string
          format: uuid
          nullable: false
        name:
          nullable: false
          type: string
          minLength: 3
          maxLength: 50
        type:
          nullable: false
          $ref: "#/components/schemas/TerminalType"
      description: A terminal that used for logistics
    Carriers:
      type: array
      items:
        $ref: "#/components/schemas/Carrier"
      description: A list of Carriers
    Carrier:
      type: object
      required:
        - id
        - name
        - tenant_id
        - type
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          nullable: false
          default: '00000000-0000-0000-0000-000000000000'
        created_at:
          type: string
          format: date-time
          nullable: false
          readOnly: true
        updated_at:
          type: string
          format: date-time
          nullable: false
          readOnly: true
        created_by:
          type: string
          format: uuid
          readOnly: true
        tenant_id:
          nullable: false
          type: string
          format: uuid
        name:
          nullable: false
          type: string
          minLength: 3
          maxLength: 50
        eta:
          type: string
          format: date-time
          readOnly: true
        type:
          nullable: false
          $ref: "#/components/schemas/CarrierType"
      description: A carrier that ships the shipments
    Shipments:
      type: array
      items:
        $ref: "#/components/schemas/Shipment"
      description: A list of Shipments
    Shipment:
      type: object
      required:
        - id
        - serial_number
        - tenant_id
        - type
        - created_at
        - updated_at
      properties:
        id:
          nullable: false
          type: string
          format: uuid
          readOnly: true
          default: '00000000-0000-0000-0000-000000000000'
        created_at:
          type: string
          format: date-time
          nullable: false
          readOnly: true
        updated_at:
          type: string
          format: date-time
          nullable: false
          readOnly: true
        created_by:
          nullable: false
          type: string
          format: uuid
          readOnly: true
        tenant_id:
          nullable: false
          type: string
          format: uuid
        carrier_id:
          type: string
          format: uuid
        order_id:
          type: string
          format: uuid
        customer_id:
          type: string
          format: uuid
        serial_number:
          nullable: false
          type: string
          minLength: 5
          maxLength: 11
        origin:
          type: string
          minLength: 7
          maxLength: 20
        destination:
          type: string
          minLength: 7
          maxLength: 20
        reservation_time:
          type: string
          format: date-time
        size:
          $ref: "#/components/schemas/ShipmentSize"
        type:
          $ref: "#/components/schemas/ShipmentType"
        status:
          nullable: false
          $ref: "#/components/schemas/ShipmentStatus"
        driver_id:
          type: string
          format: uuid
        driver:
          $ref: "#/components/schemas/User"
        order:
          $ref: "#/components/schemas/Order"
        customer:
          $ref: "#/components/schemas/Customer"
        carrier:
          $ref: "#/components/schemas/Carrier"
      description: A shipment that is being shipped
    Orders:
      type: array
      items:
        $ref: "#/components/schemas/Order"
      description: A list of Orders
    Order:
      type: object
      required:
        - id
        - serial_number
        - tenant_id
        - status
        - created_at
        - updated_at
      properties:
        id:
          nullable: false
          type: string
          format: uuid
          readOnly: true
          default: "00000000-0000-0000-0000-000000000000"
        created_at:
          type: string
          format: date-time
          nullable: false
          readOnly: true
        updated_at:
          type: string
          format: date-time
          nullable: false
          readOnly: true
        created_by:
          type: string
          format: uuid
          readOnly: true
        tenant_id:
          nullable: false
          type: string
          format: uuid
        customer_id:
          type: string
          format: uuid
        serial_number:
          nullable: false
          type: string
          minLength: 7
          maxLength: 25
        status:
          nullable: false
          $ref: "#/components/schemas/OrderStatus"
        customer:
          nullable: false
          $ref: "#/components/schemas/Customer"
      description: A customer order that is being processed
    TenantType:
      type: string
      enum:
        - System
        - Test
        - Production
    TerminalType:
      type: string
      enum:
        - Rail
        - Port
        - Airport
        - Warehouse
        - Yard
        - Custom
    CarrierType:
      type: string
      enum:
        - Air
        - Rail
        - Vessel
        - Road
    UserRole:
      type: string
      enum:
        - SuperAdmin
        - Admin
        - BackOffice
        - Driver
        - Customer
        - None
    ShipmentStatus:
      type: string
      enum:
        - Unassigned
        - InTransit
        - Arrived
        - Assigned
        - Accepted
        - Rejected
        - Loaded
        - Delivered
    ShipmentSize:
      type: string
      enum:
        - 40ST
        - 20ST
        - 40HC
        - 40HW
        - Custom
    OrderStatus:
      type: string
      enum:
        - Open
        - Accepted
        - Cancelled
        - InProgress
        - Delivered
        - Invoiced
        - PaymentReceived
    ShipmentType:
      type: string
      enum:
        - Inbound
        - Outbound
    Error:
      type: object
      required:
        - code
        - message
        - id
      properties:
        code:
          type: integer
          format: int32
          nullable: false
        message:
          type: string
          nullable: false
        id:
          type: string
          format: uuid
          nullable: false
          default: "00000000-0000-0000-0000-000000000000"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-TOKEN
